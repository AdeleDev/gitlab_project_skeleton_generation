---
apiVersion: v1
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{IMAGE_NAME}}
      namespace: {{NAMESPACE}}
    spec:
      replicas: 1
      selector:
        matchLabels:
          workload.user.cattle.io/workloadselector: deployment-{{NAMESPACE}}-{{IMAGE_NAME}}
      strategy:
        rollingUpdate:
          #for production it will be updated to maxSurge 1, maxUnavailable 0
          maxSurge: 0
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          annotations:
            field.cattle.io/ports: '[[{"containerPort":8080,"dnsName":"{{IMAGE_NAME}}-nodeport","kind":"NodePort","name":"http","protocol":"TCP"}]]'
          labels:
            workload.user.cattle.io/workloadselector: deployment-{{NAMESPACE}}-{{IMAGE_NAME}}
            app: {{IMAGE_NAME}}
        spec:
          containers:
            - image: {{IMAGE_PATH}}
              imagePullPolicy: Always
              name: {{IMAGE_NAME}}
              command:
                - /bin/sh
              env:
                - name: FLYWAY_DB_USERNAME
                  value: {{FLYWAY_DB_USERNAME}}
                - name: FLYWAY_DB_URL
                  value: {{FLYWAY_DB_URL}}
                - name: FLYWAY_DB_PASSWORD
                  value: {{FLYWAY_DB_PASSWORD}}
              resources:
                limits:
                  cpu: 100m
                  memory: 512Mi
                requests:
                  cpu: 5m
                  memory: 12Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities: { }
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 1000
              stdin: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              tty: true
              volumeMounts:
          volumes:
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: {{DOCKER_SECRET}}
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: { }
          terminationGracePeriodSeconds: 30
kind: List
